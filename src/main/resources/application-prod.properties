spring.application.name=Dangdang Salon Server

## MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.format_sql=true

## Redis
spring.data.redis.host=${SPRING_REDIS_HOST}
spring.data.redis.port=${SPRING_REDIS_PORT}

## MongoDB
spring.data.mongodb.host=${SPRING_MONGODB_HOST}
spring.data.mongodb.port=${SPRING_MONGODB_PORT}
spring.data.mongodb.database=${SPRING_MONGODB_DATABASE}
spring.data.mongodb.username=${SPRING_MONGODB_USERNAME}
spring.data.mongodb.password=${SPRING_MONGODB_PASSWORD}
spring.data.mongodb.authentication-database=admin

## Monitoring
management.endpoints.web.exposure.include=*
management.endpoint.health.show-components=always
management.info.java.enabled=true
management.info.os.enabled=true
management.info.env.enabled=true
info.app.name=dangdang_salon
info.app.company=dangdang_salon

## Flyway
spring.flyway.enabled=true
spring.flyway.url=${SPRING_FLYWAY_URL}
spring.flyway.user=${SPRING_FLYWAY_USER}
spring.flyway.password=${SPRING_FLYWAY_PASSWORD}
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

## Loki Logging
logging.file.name=${SPRING_LOKI_LOGGING_PATH}
logging.level.root=INFO

##JWT
spring.jwt.secret=${JWT_SECRET}

##OAuth2

#google registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=https://api.dangdang-salon.com/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email

#naver registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=https://api.dangdang-salon.com/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile

#naver provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#kakao registration
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.redirect-uri=https://api.dangdang-salon.com/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email,profile_image

#kakao provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=properties

##AWS S3
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY}
cloud.aws.credentials.secret-key=${AWS_SECRET_KEY}
cloud.aws.region.static=ap-northeast-2
cloud.aws.s3.bucket=dangdangserver-bucket
cloud.aws.cloudfront.domain=${AWS_CLOUDFRONT_DOMAIN}

##toss
toss.api.key=${TOSS_SECRET_KEY}
toss.api.approve-url=https://api.tosspayments.com/v1/payments/confirm
toss.api.cancel-url=https://api.tosspayments.com/v1/payments/{paymentKey}/cancel

##firebase
firebase.service-account-key=${FIREBASE_ACCOUNT_KEY}

##email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=kyoon1023@gmail.com
spring.mail.password=${SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

openai.secret-key=${OPENAI_SECRET_KEY}
openai.url=https://api.openai.com/v1/images/generations
openai.gpt-url=https://api.openai.com/v1/chat/completions

# Kafka
## Consumer
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

## Producer
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer