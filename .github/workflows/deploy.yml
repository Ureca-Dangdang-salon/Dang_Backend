name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main # PR 생성 시 테스트 실행
  push:
    branches:
      - main # main 브랜치에 Push 발생 시 배포 진행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Redis와 Kafka를 Docker Compose로 실행
      - name: Start Redis and Kafka with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
          sleep 15 # 컨테이너 준비 시간

      - name: Check running containers
        run: docker ps

      - name: Build JAR file
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          MONGODB_HOST: ${{ secrets.MONGODB_HOST }}
          MONGODB_PORT: ${{ secrets.MONGODB_PORT }}
          MONGODB_DATABASE: ${{ secrets.MONGODB_DATABASE }}
          TOSS_SECRET_KEY: ${{ secrets.TOSS_SECRET_KEY }}
          FIREBASE_ACCOUNT_KEY: ${{ secrets.FIREBASE_ACCOUNT_KEY }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          OPENAI_SECRET_KEY: ${{ secrets.OPENAI_SECRET_KEY }}
          spring.kafka.bootstrap-servers: localhost:9092
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -Dspring.profiles.active=test

      - name: Copy JAR to build context
        run: cp build/libs/dangdang-salon-service-*-SNAPSHOT.jar .

      - name: Build Docker image
        run: |
          docker build -t dangdang-salon:latest .
          docker tag dangdang-salon:latest ${{ secrets.DOCKER_USERNAME }}/dangdang-salon:latest

      - name: Push Docker image to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push $DOCKER_USERNAME/dangdang-salon:latest

      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.EC2_SERVER_IP }}
          SERVER_USER: ${{ secrets.EC2_SERVER_USER }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          MONGODB_HOST: ${{ secrets.MONGODB_HOST }}
          MONGODB_PORT: ${{ secrets.MONGODB_PORT }}
          MONGODB_DATABASE: ${{ secrets.MONGODB_DATABASE }}
          TOSS_SECRET_KEY: ${{ secrets.TOSS_SECRET_KEY }}
          FIREBASE_ACCOUNT_KEY: ${{ secrets.FIREBASE_ACCOUNT_KEY }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          OPENAI_SECRET_KEY: ${{ secrets.OPENAI_SECRET_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD && \
            cd /home/ubuntu/app && \
            docker-compose pull && \
            docker-compose up -d
          "
